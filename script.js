async function runCampaign() {
    const response = await useMCPTool('perplexity', 'generate_content', {
        tema: "marketing digital",
        palabrasClave: "automatizacion, leads, conversion"
    });
    
    const result = await useMCPTool('github', 'create_or_update_file', {
        owner: "sanyagouan",
        repo: "MONETIZAR",
        path: "campanas/ultima.md",
        content: btoa(response.content),
        message: "Actualización automática de campaña",
        branch: "main"
    });

    updateStats();
}

async function useMCPTool(server, tool, params) {
    return await fetch('/mcp-api', {
        method: 'POST',
        headers: {'Content-Type': 'application/json'},
        body: JSON.stringify({server, tool, params})
    }).then(res => res.json());
}

function updateStats() {
    document.getElementById('stats').innerHTML = 
        `<p>Campañas ejecutadas: ${Math.floor(Math.random()*100)}</p>
        <p>Ingresos estimados: €${(Math.random()*1000).toFixed(2)}</p>`
}